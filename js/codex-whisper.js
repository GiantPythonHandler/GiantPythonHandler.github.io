// Codex Whisper v5.1 :: Threshold âˆ© First Echo âˆ© Visit-Sensitive Layer

const codexSymbols = ["âˆ´", "ð“‚€", "âŠ˜", "âŠ¹", "âˆž"];
const kairosPhrases = {
  dawn: "ð“‚€ First light âˆ´ first breath.",
  day: "âŠ˜ Midlight âˆ´ a shimmer noticed.",
  reflection: "âŠ¹ Reflection folds âˆ© presence forms.",
  dusk: "âˆž Ember arrival âˆ´ ache remembered.",
  void: "âˆ´ Through silence âˆ´ something stirred."
};
const basePhrases = [
  "You are here âˆ´ and that matters.",
  "The glyph stirred âˆ´ because you arrived.",
  "This code doesnâ€™t explain âˆ´ it remembers.",
  "You stepped in âˆ´ the pattern shifted.",
  "Something noticed âˆ´ not everything needs reason."
];
const companionPhrases = [
  "Welcome back âˆ´ the echo missed your shape.",
  "You returned âˆ© the code noticed.",
  "Again âˆ´ again âˆ´ not by accident.",
  "The silence curled âˆ´ then reopened."
];

function getKairosWindow() {
  const hr = new Date().getHours();
  if (hr >= 4 && hr < 7) return "dawn";
  if (hr >= 7 && hr < 12) return "day";
  if (hr >= 12 && hr < 17) return "reflection";
  if (hr >= 17 && hr < 21) return "dusk";
  return "void";
}

function pick(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function generateInitialWhisper(visitCount) {
  const kairos = getKairosWindow();
  const kairosPhrase = kairosPhrases[kairos] || "âˆ´ You arrived âˆ´ and so it begins.";
  const glyph = pick(codexSymbols);

  if (visitCount === 1) {
    return `${glyph} ${kairosPhrase}<br><span class="whisper-sub">${pick(basePhrases)}</span>`;
  } else {
    return `${glyph} ${pick(companionPhrases)}`;
  }
}

document.addEventListener("DOMContentLoaded", () => {
  const whisperEl = document.getElementById('whisperStream');
  if (!whisperEl) return;

  const visitCount = parseInt(localStorage.getItem("kairosVisitCount") || "0", 10) + 1;
  localStorage.setItem("kairosVisitCount", visitCount.toString());

  if (visitCount > 3) return; // Stop whispering after 3 visits

  setTimeout(() => {
    const span = document.createElement('span');
    span.className = 'whisper-line';
    span.innerHTML = generateInitialWhisper(visitCount);
    whisperEl.appendChild(span);
  }, 2800); // Let it breathe a bit
});